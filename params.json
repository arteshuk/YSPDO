{
  "name": "YSPDO",
  "tagline": "Class in PHP YSPDO is a PDO helper to manipulate dynamically database records using arrays",
  "body": "# YSPDO\r\nClass in PHP `YSPDO` is a `PDO` helper to manipulate dynamically database records using `arrays`\r\n### Initialize class\r\nWithout defining settings\r\n```php\r\n$db = new YSPDO; // Change the values of $settings variable in class\r\n```\r\nDefining settings\r\n```php\r\n$db = new YSPDO([\r\n    'driver'    => 'mysql',\r\n    'host'      => 'localhost',\r\n    'port'      => 3306,\r\n    'charset'   => 'utf8',\r\n    'database'  => 'dbname',\r\n    'user'      => 'root',\r\n    'password'  => ''\r\n]);\r\n```\r\n## Compare `PDO` and `YSPDO` with `CRUD`\r\n#### Start connection\r\n```php\r\n// PDO\r\n$pdo = new PDO('DRIVER:host=HOST;dbname=DB_NAME', DB_USER, DB_PASSWORD);\r\n$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\r\n\r\n// YSPDO\r\n$db = new YSPDO([\r\n    'driver'    => 'DRIVER',\r\n    'host'      => 'HOST',\r\n    'database'  => 'DB_NAME',\r\n    'user'      => 'DB_USER',\r\n    'password'  => 'DB_PASSWORD'\r\n]);\r\n```\r\n#### CREATE\r\n```php\r\n// PDO\r\n$stmt = $pdo->prepare('INSERT INTO `peoples` (`name`, `email`, `country`) VALUES (?, ?, ?)');\r\n$stmt->bindValue(1, 'Gabriel Almeida', PDO::PARAM_STR);\r\n$stmt->bindValue(2, 'gabrieel@email.com', PDO::PARAM_STR);\r\n$stmt->bindValue(3, 'Brazil', PDO::PARAM_STR);\r\n$stmt->execute();\r\necho $stmt->lastInsertId();\r\n\r\n// YSPDO\r\n$stmt = $db->insert('peoples',[\r\n  'name'    => 'Gabriel Almeida',\r\n  'email'   => 'gabrieel@email.com',\r\n  'country' => 'Brazil'\r\n]);\r\necho $stmt->lastInsertId();\r\n```\r\n#### READ\r\n```php\r\n// PDO\r\n$stmt = $pdo->prepare('SELECT `name`,`email`,`address`,`company` FROM `peoples` WHERE id>=?');\r\n$stmt->bindValue(1, 100, PDO::PARAM_INT);\r\n$stmt->execute();\r\n\r\nprint_r( $stmt->fetchAll(PDO::FETCH_COLUMN) );\r\n\r\n// YSPDO\r\n$stmt = $db->select('peoples',['name','email','address','company'],[\r\n  'id{>=}' => 100\r\n]);\r\n\r\nprint_r( $stmt->fetchAll('COLUMN') );\r\n\r\n```\r\n#### UPDATE\r\n```php\r\n// PDO\r\n$stmt = $pdo->prepare('UPDATE `peoples` SET `phone`=?, `address`=? WHERE id=?');\r\n$stmt->bindValue(1, '(00) 0000-0000', PDO::PARAM_STR);\r\n$stmt->bindValue(2, '4129 Magna. Avenue', PDO::PARAM_STR);\r\n$stmt->bindValue(3, 100, PDO::PARAM_INT);\r\n$stmt->execute();\r\n\r\n// YSPDO\r\n$stmt = $db->update('peoples',[\r\n  'phone' => '(00) 0000-0000',\r\n  'address' => '4129 Magna. Avenue',\r\n],[\r\n  'id' => 100\r\n]);\r\n```\r\n#### DELETE\r\n```php\r\n// PDO\r\n$stmt = $pdo->prepare('DELETE FROM `peoples` WHERE id=?');\r\n$stmt->bindValue(1, 100, PDO::PARAM_INT);\r\n$stmt->execute();\r\n\r\n// YSPDO\r\n$stmt = $db->delete('peoples',[\r\n  'id' => 100\r\n]);\r\n```\r\n## SELECT\r\n#### fetch\r\n```php\r\n$db->select('peoples','all',[\r\n    'email' => 'commodo@sem.edu'\r\n])->fetch();\r\n```\r\n#### fetchAll\r\n```php\r\n$db->select('peoples')->fetchAll();\r\n```\r\n#### fetch setting type of return\r\n```php\r\n$db->select('peoples','all',[\r\n    'email' => 'commodo@sem.edu'\r\n])->fetch('OBJ');\r\n```\r\n\r\n#### fetch all setting type of return\r\n```php\r\n$db->select('peoples')->fetchAll('OBJ');\r\n```\r\n\r\n#### Selecting columns\r\n```php\r\n$db->select('peoples',['name','email','phone'])->fetchAll();\r\n```\r\n#### DISTINCT\r\n```php\r\n$db->select('peoples',[\r\n    'DISTINCT' => 'name'\r\n    // OR\r\n    'DISTINCT' => ['name','phone','date']\r\n])->fetchAll();\r\n```\r\n\r\n#### ALIASES\r\n```php\r\n$db->select('peoples',[\r\n    'AS' => [\r\n        'name' => 'yourName',\r\n        'date' => 'birthday',\r\n        'email' => 'contact'\r\n    ]\r\n])->fetchAll();\r\n```\r\n\r\n#### Operators\r\n```php\r\n$db->select('peoples','all',[\r\n    'id{>=}' => 100\r\n])->fetchAll();\r\n```\r\n\r\n#### rowCount\r\n```php\r\n$db->select('peoples','all',[\r\n    'email' => 'dolor.sit@ametdiam.ca'\r\n])->rowCount();\r\n```\r\n#### ORDER BY\r\n```php\r\n$db->select('peoples','all',[\r\n    'ORDER' => 'city'\r\n// OR\r\n    'ORDER' => 'name DESC'\r\n// OR\r\n    'ORDER' => ['name DESC','city ASC']\r\n])->fetchAll();\r\n```\r\n#### BETWEEN\r\n```php\r\n$db->select('peoples','all',[\r\n    'BETWEEN' => [\r\n        'id' => [1,25]\r\n        // OR\r\n        'name' => ['a','b']\r\n        // OR\r\n        'date' => ['05/04/1980','05/04/1990']\r\n    ]\r\n])->fetchAll();\r\n```\r\n#### NOT BETWEEN\r\n```php\r\n$db->select('peoples','all',[\r\n    '!BETWEEN' => [\r\n        'id' => [1,25]\r\n        // OR\r\n        'name' => ['a','b']\r\n        // OR\r\n        'date' => ['05/04/1980','05/04/1990']\r\n    ]\r\n])->fetchAll();\r\n```\r\n#### LIKE\r\n```php\r\n$db->select('peoples','all',[\r\n    'LIKE' => [\r\n        'name' => 'g%'\r\n    ]\r\n])->fetchAll();\r\n```\r\n#### NOT LIKE\r\n```php\r\n$db->select('peoples','all',[\r\n    '!LIKE' => [\r\n        'name' => 'g%'\r\n    ]\r\n])->fetchAll();\r\n```\r\n#### LIMIT\r\n```php\r\n$db->select('peoples','all',[\r\n    'LIMIT' => 10\r\n])->fetchAll()\r\n```\r\n#### IN\r\n```php\r\n$db->select('peoples','all',[\r\n    'IN' => [\r\n        'city' => ['Acoz','Pietraroja','Martelange','Relegem']\r\n    ]\r\n])->fetchAll();\r\n```\r\n#### NOT IN\r\n```php\r\n$db->select('peoples','all',[\r\n    '!IN' => [\r\n        'city' => ['Acoz','Pietraroja','Martelange','Relegem']\r\n    ]\r\n])->fetchAll();\r\n```\r\n#### Using IN | BETWEEN | NOT LIKE | ORDER BY\r\n```php\r\n$db->select('peoples','all',[\r\n    'IN' => [\r\n        'date' => ['02/11/1985','11/27/1997','09/24/1969','01/15/1985','09/12/1986']\r\n    ],\r\n    'BETWEEN' => [\r\n        'id' => [1,50]\r\n    ],\r\n    '!LIKE' => [\r\n        'city' => 's%'\r\n    ],\r\n    'ORDER' => 'city ASC'\r\n])->fetchAll();\r\n```\r\n### CREATE DATABASE\r\n```php\r\n$db->createDB('dbname');\r\n```\r\n### DELETE DATABASE\r\n```php\r\n$db->deleteDB('dbname');\r\n```\r\n### CREATE TABLE\r\n```php\r\n$db->createTable('teste',[\r\n    'id' => [\r\n        'varchar',\r\n        255,\r\n        'AUTO_INCREMENT',\r\n        '!NULL'\r\n    ],\r\n    'email' => [\r\n        'varchar',\r\n        100,\r\n        '!NULL',\r\n        'COMMENT' => 'Comment row'\r\n    ],\r\n    'PRIMARY KEY' => ['id']\r\n],[\r\n    'ENGINE' => 'MyISAM',\r\n    'DEFAULT CHARSET' => 'utf8',\r\n    'COLLATE' => 'utf8_bin',\r\n    'STATS_PERSISTENT' => 0,\r\n    'COMMENT' => 'comment'\r\n]);\r\n```\r\n### INSERT INTO\r\n```php\r\n$db->insert('peoples',[\r\n    'id' => 301,\r\n    'name' => 'Gabriel',\r\n    'phone' => '+0000000000',\r\n    'date' => '00/00/0000',\r\n    'email' => 'name@test.com',\r\n    'address' => 'Street teste address nº 1000 Av test',\r\n    'city' => 'Araguaina',\r\n    'country' => 'Brazil',\r\n    'company' => 'No Company',\r\n]);\r\n```\r\n### UPDATE\r\n```php\r\n$db->update('peoples',[\r\n    'phone' => '+1111111111',\r\n    'date' => '11/11/1111',\r\n    'email' => 'name@server.co',\r\n    'address' => 'Street teste address nº 1000 Av test'\r\n],[ 'id' => 301 ]);\r\n```\r\n### DELETE\r\n```php\r\n$db->delete('peoples',[\r\n    'id' => 301\r\n]);\r\n```\r\n### DELETE TABLE\r\n```php\r\n$db->deleteTable('peoples');\r\n```\r\n### TRUNCATE TABLE\r\n```php\r\n$db->truncate('peoples');\r\n```\r\n### Available Functions\r\n```php\r\n->getAvailableDrivers()\r\n->commit()\r\n->beginTransaction()\r\n->rollBack()\r\n->inTransaction()\r\n->exec()\r\n->quote()\r\n->errorCode()\r\n->errorInfo()\r\n->query()\r\n->rowCount()\r\n->lastInsertId()\r\n->prepare()\r\n->bindColumn()\r\n->bindParam()\r\n->bindValue()\r\n->closeCursor()\r\n->columnCount()\r\n->execute()\r\n->fetch()\r\n->fetchAll()\r\n->fetchColumn()\r\n->fetchObject()\r\n->getAttribute()\r\n->setAttribute()\r\n->select()\r\n->insert()\r\n->update()\r\n->delete()\r\n->createDB()\r\n->deleteDB()\r\n->createTable()\r\n->deleteTable()\r\n->truncate()\r\n```\r\n***\r\n## REQUIREMENTS\r\nPHP Version 7.x or newer\r\n## LICENCE\r\n[MIT](/LICENCE.txt)\r\n***\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}
